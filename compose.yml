services:
  broker:
    container_name: rabbitmq
    build: ./broker
    ports:
      - 15671:15671
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - exchange
  producer:
    build:
      context: .
      dockerfile: ./producer/Dockerfile
    command: python tasks.py
    depends_on:
      broker:
        condition: service_healthy
        restart: true
      parent:
        condition: service_started
      kid:
        condition: service_started
    environment:
      - RABBITMQ_EXCHANGE_TYPE=direct
      - RABBITMQ_EXCHANGE=chores
      - RABBITMQ_HOST=amqps://broker:5671
    networks:
      - exchange
      - producer
  parent:
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
    command: python worker.py
    scale: 2
    depends_on:
      broker:
        condition: service_healthy
        restart: true
    environment:
      - RABBITMQ_BINDING=parents
      - RABBITMQ_EXCHANGE_TYPE=direct
      - RABBITMQ_EXCHANGE=chores
      - RABBITMQ_HOST=amqps://broker:5671
      - RABBITMQ_QUEUE=parents_chores
    networks:
      - exchange
      - consumer
  kid:
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
    command: python worker.py
    scale: 2
    depends_on:
      broker:
        condition: service_healthy
        restart: true
    environment:
      - RABBITMQ_BINDING=kids
      - RABBITMQ_EXCHANGE_TYPE=direct
      - RABBITMQ_EXCHANGE=chores
      - RABBITMQ_HOST=amqps://broker:5671
      - RABBITMQ_QUEUE=kids_chores
    networks:
      - exchange
      - consumer
networks:
  exchange:
  consumer:
  producer:
